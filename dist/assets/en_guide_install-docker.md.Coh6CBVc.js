import{_ as i,c as a,o as e,ad as s}from"./chunks/framework.DtW8lrcE.js";const k=JSON.parse('{"title":"Docker","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/guide/install-docker.md","filePath":"en/guide/install-docker.md","lastUpdated":1739527223000}'),n={name:"en/guide/install-docker.md"};function d(o,t,r,l,h,c){return e(),a("div",null,t[0]||(t[0]=[s(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">‚Äã</a></h1><p><strong>Docker</strong> is an open-source platform designed for automating the deployment, scaling, and management of applications. It enables developers to package an application along with its dependencies into a standalone container, ensuring that the application runs consistently in any environment. Containers are lightweight and portable, making them ideal for microservices architectures and continuous integration/continuous delivery (CI/CD) processes.</p><h2 id="one-click-run" tabindex="-1">One-Click Run <a class="header-anchor" href="#one-click-run" aria-label="Permalink to &quot;One-Click Run&quot;">‚Äã</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -itd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AMMDS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8080:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data:/ammds/data</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/db:/ammds/db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/download:/ammds/download</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/media:/media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> always</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  qyg2297248353/ammds-docker:latest</span></span></code></pre></div><details class="details custom-block"><summary>Command Explanation</summary><table tabindex="0"><thead><tr><th>Parameter</th><th>Explanation</th></tr></thead><tbody><tr><td><code>-itd</code> or <code>--interactive --tty --detach</code></td><td>A combination option:<ul><li><code>-i</code> or <code>--interactive</code>: Keeps STDIN open even if not attached, maintaining the standard input of the container open.</li><li><code>-t</code> or <code>--tty</code>: Allocates a pseudo-TTY (terminal), simulating a physical TTY so you can interact with the container as if it were a local terminal.</li><li><code>-d</code> or <code>--detach</code>: Runs the container in the background, starting it as a daemon.</li></ul></td></tr><tr><td><code>--name AMMDS</code></td><td>Specifies the name of the container as <code>AMMDS</code>.</td></tr><tr><td><code>-p 8080:80</code></td><td>Maps port 8080 on the host to port 80 in the container, formatted as <code>-p &lt;host-port&gt;:&lt;container-port&gt;</code>.</td></tr><tr><td><code>-v $(pwd)/data:/ammds/data</code></td><td>Mounts the <code>./data</code> folder from the current working directory to <code>/ammds/data</code> inside the container, achieving data persistence.</td></tr><tr><td><code>-v $(pwd)/db:/ammds/db</code></td><td>Mounts the <code>./db</code> folder from the current working directory to <code>/ammds/db</code> inside the container for storing database files.</td></tr><tr><td><code>-v $(pwd)/download:/ammds/download</code></td><td>Mounts the <code>./download</code> folder from the current working directory to <code>/ammds/download</code> inside the container, used for storing downloaded content.</td></tr><tr><td><code>-v $(pwd)/media:/media</code></td><td>Mounts the <code>./media</code> folder from the current working directory to <code>/media</code> inside the container, suitable for mounting media directories; users should choose their own mount paths as needed.</td></tr><tr><td><code>--restart always</code></td><td>Configures the container to always restart automatically, ensuring it starts up under all circumstances, including system restarts.</td></tr><tr><td><code>qyg2297248353/ammds-docker:latest</code></td><td>The Docker image name and tag used, specifying which image to run.</td></tr></tbody></table></details><h2 id="start-enjoying" tabindex="-1">Start Enjoying <a class="header-anchor" href="#start-enjoying" aria-label="Permalink to &quot;Start Enjoying&quot;">‚Äã</a></h2><p>Access <code>&lt;HostIP&gt;:8080</code> through your browser to start enjoying your AMMDS applicationü•≥~</p><p>For example, if running locally, you can view the application by visiting <code>http://localhost:8080</code>.</p><p>üéâ Now you can begin enjoying the features provided by AMMDS!</p><br><footer style="font-size:0.8em;"> Technical support provided by Xinjiang Mersen Software Development Studio <br> Copyright ¬© 2025-2025 <a href="https://beian.miit.gov.cn" rel="noreferrer" target="_blank">ICPÂ§áÊ°à2023003452Âè∑-1</a></footer>`,11)]))}const g=i(n,[["render",d]]);export{k as __pageData,g as default};
