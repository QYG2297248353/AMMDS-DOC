import{_ as i,c as a,o as e,ad as n}from"./chunks/framework.DtW8lrcE.js";const c=JSON.parse('{"title":"Docker Compose","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/guide/deploy/install-docker-compose.md","filePath":"en/guide/deploy/install-docker-compose.md","lastUpdated":1739876406000}'),t={name:"en/guide/deploy/install-docker-compose.md"};function l(h,s,p,r,o,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;Docker Compose&quot;">â€‹</a></h1><p><strong>Docker Compose</strong> is a tool for defining and running multi-container Docker applications. With a YAML file (<code>docker-compose.yml</code>), you configure your application&#39;s services, which can then be started with a single command. It is ideal for the rapid deployment and management of applications in development, testing, and staging environments.</p><h2 id="creating-services" tabindex="-1">Creating Services <a class="header-anchor" href="#creating-services" aria-label="Permalink to &quot;Creating Services&quot;">â€‹</a></h2><h3 id="create-an-application-directory" tabindex="-1">Create an Application Directory <a class="header-anchor" href="#create-an-application-directory" aria-label="Permalink to &quot;Create an Application Directory&quot;">â€‹</a></h3><p>First, create a directory named <code>ammds</code> to store related files:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ammds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ammds</span></span></code></pre></div><h3 id="create-configuration-files" tabindex="-1">Create Configuration Files <a class="header-anchor" href="#create-configuration-files" aria-label="Permalink to &quot;Create Configuration Files&quot;">â€‹</a></h3><p>Within the <code>ammds</code> directory, create and edit a <code>docker-compose.yml</code> file. Paste the following content into the file:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ammds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">qyg2297248353/ammds:latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # The name and tag of the image used</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">AMMDS</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Name of the container</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8080:80&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Port mapping: host port 8080 to container port 80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./data:/ammds/data</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Mount the data folder from the current directory to /ammds/data path inside the container</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./db:/ammds/db</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Mount the db folder from the current directory to /ammds/db path inside the container</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./download:/ammds/download</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Mount the download folder from the current directory to /ammds/download path inside the container</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./media:/media</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Mount the media folder from the current directory to /media path inside the container</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Always restart the container if it crashes</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Set the timezone to Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ammds-network</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Use a custom network</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ammds-network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Custom network configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    driver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bridge</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Use Docker&#39;s default bridge network driver</span></span></code></pre></div><h2 id="starting-services" tabindex="-1">Starting Services <a class="header-anchor" href="#starting-services" aria-label="Permalink to &quot;Starting Services&quot;">â€‹</a></h2><p>Use the following command to start the services. This will run the AMMDS container in the background and apply all configurations from <code>docker-compose.yml</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h2 id="stopping-services" tabindex="-1">Stopping Services <a class="header-anchor" href="#stopping-services" aria-label="Permalink to &quot;Stopping Services&quot;">â€‹</a></h2><p>If you need to stop and remove the services, use the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span></code></pre></div><h2 id="start-enjoying" tabindex="-1">Start Enjoying <a class="header-anchor" href="#start-enjoying" aria-label="Permalink to &quot;Start Enjoying&quot;">â€‹</a></h2><p>Access <code>&lt;HostIP&gt;:8080</code> through your browser to start enjoying your AMMDS applicationðŸ¥³~</p><p>For example, if running locally, you can view the application by visiting <code>http://localhost:8080</code>.</p><p>ðŸŽ‰ Now you can begin enjoying the features provided by AMMDS!</p>`,19)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
